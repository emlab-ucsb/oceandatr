% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_bathymetry.R
\name{get_bathymetry}
\alias{get_bathymetry}
\title{Get bathymetry data for the area of interest}
\usage{
get_bathymetry(
  area_polygon = NULL,
  planning_grid = NULL,
  classify_bathymetry = TRUE,
  above_sea_level_isNA = FALSE,
  name = "bathymetry",
  bathymetry_data_filepath = NULL,
  resolution = 1,
  keep = FALSE,
  path = NULL,
  download_timeout = 300,
  antimeridian = NULL
)
}
\arguments{
\item{area_polygon}{an `sf` polygon or multipolygon object of the area of interest (e.g. a country's EEZ)}

\item{planning_grid}{a `terra::rast()` or `sf` planning grid with the desired resolution and coordinate reference system generated by `get_planning_grid()`. For a raster, values in the planning grid cells should be 1, while all other values are NA}

\item{classify_bathymetry}{`logical`; whether to classify the bathymetry into depth zones}

\item{above_sea_level_isNA}{`logical`; whether to set bathymetry (elevation) data values that are above sea level (i.e. greater than or equal to zero) to `NA` (`TRUE`) or zero (`FALSE`)}

\item{name}{`string`; name of bathymetry raster or column in sf object that is returned}

\item{bathymetry_data_filepath}{`string`; the file path (including file name and extension) where bathymetry raster data are saved locally}

\item{resolution}{`numeric`; the resolution (in minutes) of data to pull from the ETOPO 2022 Global Relief model. Values less than 1 can only be 0.5 (30 arc seconds) and 0.25 (15 arc seconds)}

\item{keep}{`logical`; whether to save the bathymetry data locally}

\item{path}{`string`; the file path where you would like to save bathymetry data}

\item{download_timeout}{`numeric`; the maximum number of seconds a query to the NOAA website is allowed to run}

\item{antimeridian}{Does `area_polygon` or `planning_grid` span the antimeridian? If so, this should be set to `TRUE`, otherwise set to `FALSE`. If set to `NULL` (default) the function will try to check if data spans the antimeridian and set this appropriately.}
}
\value{
If `classify_bathymetry = FALSE`, a bathymetry raster or `sf` object for the `area_polygon` or `planning_grid` depending on which was supplied. 
If `classify_bathymetry = FALSE`, a depth zones raster or `sf` object for the `area_polygon` or `planning_grid` depending on which was supplied. If a `planning_grid` is supplied, a raster stack of zones or `sf` object with one zone in each column is returned, depending on `planning_grid` format.
}
\description{
This function extracts bathymetry data for the area of interest from the ETOPO 2022 Global Relief model. If data are already downloaded locally, the user can specify the file path of the dataset. See Details for more information. Data can be classified into depth zones ready for use in a spatial prioritization by setting `classify_bathymetry = TRUE`
}
\details{
Extracts bathymetry data for an `area_polygon`, or if a `planning_grid` is supplied, gridded bathymetry is returned. 

#' Data can be classified into depth zones by setting `classify_bathymetry = TRUE`. Depths are classified as follows:
\itemize{
\item Epipelagic Zone: 0-200 m depth
\item Mesopelagic Zone: 200-1000 m depth
\item Bathypelagic Zone: 1000-4000 m depth
\item Abyssopelagic Zone: 4000-6000 m depth
\item Hadopelagic Zone: 6000+ m depth
}

If the user has downloaded bathymetry data for the area of interest, for example from GEBCO (https://www.gebco.net), they can pass the file path to this function in `bathymetry_data_filepath`. If no file path is provided, the function will extract bathymetry data for the area from the ETOPO 2022 Global Relief model served by NOAA (https://www.ncei.noaa.gov/products/etopo-global-relief-model).
}
\examples{
# Get EEZ data first 
bermuda_eez <- get_area(area_name = "Bermuda", mregions_column = "territory1")
# Get bathymetry data
bathymetry <- get_bathymetry(area_polygon = bermuda_eez, classify_bathymetry = TRUE)
# Get depth zones in planning_grid
planning_grid <- get_planning_grid(area_polygon = bermuda_eez, projection_crs = '+proj=laea +lon_0=-64.8108333 +lat_0=32.3571917 +datum=WGS84 +units=m +no_defs', resolution = 5000)
depth_zones <- get_bathymetry(planning_grid = planning_grid)
}
