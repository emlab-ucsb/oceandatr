% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_seamounts_buffered.R
\name{get_seamounts_buffered}
\alias{get_seamounts_buffered}
\title{Get seamount peak areas buffered to a specified radius}
\usage{
get_seamounts_buffered(area_polygon, planning_grid, buffer_km = 30)
}
\arguments{
\item{area_polygon}{an sf polygon or multipolygon object of the area of interest (e.g., a country's EEZ)}

\item{planning_grid}{a raster template with the desired resolution and coordinate reference system generated by `get_planning_grid()`; values in areas of interest are 1, while all other values are NA}

\item{buffer_km}{numeric; the distance (in km) from the seamount peak to include in the output}
}
\value{
A raster of buffered seamount areas found within the area polygon, rasterized using the planning_grid input raster
}
\description{
This function collects data for seamount peak locations within the area of interest and adds a specified buffer region to ensure all biodiversity around a seamount can also be protected.
}
\details{
Seamounts are classified as peaks at least 1000 m higher than the surrounding seafloor (Morato et al. 2008)
}
\examples{
# Grab EEZ data first 
bermuda_eez <- get_eez(country_name = "Bermuda")
# Create a CRS using a local, equal area projection in WKT format for Bermuda. 
# You can get WKT outputs in equal area projections for your area of interest from https://projectionwizard.org
projection <- 'PROJCS["ProjWiz_Custom_Lambert_Azimuthal", GEOGCS["GCS_WGS_1984", DATUM["D_WGS_1984", SPHEROID["WGS_1984",6378137.0,298.257223563]], PRIMEM["Greenwich",0.0], UNIT["Degree",0.0174532925199433]], PROJECTION["Lambert_Azimuthal_Equal_Area"], PARAMETER["False_Easting",0.0], PARAMETER["False_Northing",0.0], PARAMETER["Central_Meridian",-64.5], PARAMETER["Latitude_Of_Origin",32], UNIT["Meter",1.0]]'
# Create a planning grid with 5 km resolution; reproject the `bermuda_eez` object to the CRS defined in the `projection` object
planning_grid <- get_planning_grid(area_polygon = bermuda_eez, projection_crs = projection, resolution_km = 5)
# Get buffered seamount area within the planning grid with a 30 km buffer
seamounts <- get_seamounts_buffered(area_polygon = bermuda_eez, planning_grid = planning_grid, buffer_km = 30)
}
