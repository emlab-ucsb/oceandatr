% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_features.R
\name{get_features}
\alias{get_features}
\title{Combine feature functions to grab and collate all available data}
\usage{
get_features(
  area_polygon,
  planning_grid,
  features = c("bathymetry", "seamounts", "knolls", "geomorphology", "corals",
    "enviro_regions"),
  seamount_buffer = 30,
  bathy_resolution = 1,
  antipatharia_threshold = 22,
  octocoral_threshold = 2,
  enviro_clusters = NULL,
  max_enviro_clusters = 8
)
}
\arguments{
\item{area_polygon}{an sf polygon or multipolygon object of the area of interest (e.g., a country's EEZ)}

\item{planning_grid}{a raster or sf template with the desired resolution and coordinate reference system generated by `get_planning_grid()`; values in areas of interest are 1, while all other values are NA}

\item{features}{a vector of feature names, can include: "bathymetry", "seamounts", "knolls", "geomorphology", "corals", "enviro_regions"}

\item{seamount_buffer}{numeric; the distance (in km) from the seamount peak to include in the output (default is 30); only required if "seamounts" is in features}

\item{bathy_resolution}{numeric; the resolution (in decimal degrees) of data to pull from the ETOPO 2022 Global Relief model (default is 1); only required if "bathymetry" is in features}

\item{antipatharia_threshold}{numeric between 0 and 7; the threshold value for how many species (of 7) should be predicted present in an area for octocorals to be considered present (default is 2); only required if "corals" is in features}

\item{octocoral_threshold}{numeric between 0 and 100; the threshold value for habitat suitability for antipatharia corals to be considered present (default is 22, as defined in Yesson et al., 2017); only required if "corals" is in features}

\item{enviro_clusters}{numeric; the number environmental regions to calculate - to be used when a clustering algorithm is not necessary (default is NULL); only required if "enviro_regions" is in features}

\item{max_enviro_clusters}{numeric; the maximum number of environmental regions to try when using the clustering algorithm (default is 8); only required if "enviro_regions" is in features}
}
\value{
A raster stack with each layer representing a different feature, or an sf object with each column representing a different feature
}
\description{
This function grabs and collates all available data in an area of interest
}
\details{
This is a wrapper function of `get_bathymetry()`, `classify_depths()`, `get_seamounts_buffered()`, `get_knolls()`, `get_geomorphology()`, `get_coral_habitat()`, and `get_enviro_regions()`
}
\examples{
# Grab EEZ data first 
bermuda_eez <- get_area(area_name = "Bermuda")
# Specify projection
projection <- 'PROJCS["ProjWiz_Custom_Lambert_Azimuthal", GEOGCS["GCS_WGS_1984", DATUM["D_WGS_1984", SPHEROID["WGS_1984",6378137.0,298.257223563]], PRIMEM["Greenwich",0.0], UNIT["Degree",0.0174532925199433]], PROJECTION["Lambert_Azimuthal_Equal_Area"], PARAMETER["False_Easting",0.0], PARAMETER["False_Northing",0.0], PARAMETER["Central_Meridian",-64.5], PARAMETER["Latitude_Of_Origin",32], UNIT["Meter",1.0]]'
# Create planning area
bermuda_planning_area <- get_planning_grid(bermuda_eez, projection)
# Grab all the data
data <- get_features(area_polygon = bermuda_eez, planning_grid = bermuda_planning_area)
}
