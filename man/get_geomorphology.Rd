% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_geomorphology.R
\name{get_geomorphology}
\alias{get_geomorphology}
\title{Get seafloor geomorphology data}
\usage{
get_geomorphology(spatial_grid = NULL, raw = FALSE, antimeridian = NULL)
}
\arguments{
\item{spatial_grid}{\code{sf} or \code{terra::rast()} grid, e.g. created using \code{get_grid()}. Alternatively, if raw data is required, an \code{sf} polygon can be provided, e.g. created using \code{get_boundary()}, and set \code{raw = TRUE}.}

\item{raw}{\code{logical} if TRUE, \code{spatial_grid} should be an \code{sf} polygon, and the raw geomorphology data in that polygon(s) will be returned}

\item{antimeridian}{Does \code{spatial_grid} span the antimeridian? If so, this should be set to \code{TRUE}, otherwise set to \code{FALSE}. If set to \code{NULL} (default) the function will try to check if data spans the antimeridian and set this appropriately.}
}
\value{
For gridded data, a multi-layer raster object, or an \code{sf} object with geomorphology class in each column, depending on the \code{spatial_grid} format. If \code{raw = TRUE} an \code{sf} object with each row as a different geomorphological feature.
}
\description{
Get geomorphological data for a spatial grid or polygon
}
\details{
Geomorphological features are from the \href{https://doi.org/10.1016/j.margeo.2014.01.011}{Harris et al. 2014} dataset, available at: https://www.bluehabitats.org. The features included are limited to those listed in \href{https://doi.org/10.3389/fmars.2021.634574}{Cecarelli et al. 2021} Table 5.
}
\examples{
# Grab EEZ data first 
bermuda_eez <- get_boundary(name = "Bermuda")
# Get geomorphology for the EEZ
bermuda_geomorph <- get_geomorphology(spatial_grid = bermuda_eez, raw = TRUE)
plot(bermuda_geomorph)
# Get geomorphological features in spatial_grid
bermuda_grid <- get_grid(boundary = bermuda_eez, crs = '+proj=laea +lon_0=-64.8108333 +lat_0=32.3571917 +datum=WGS84 +units=m +no_defs', resolution = 20000)
geomorph_gridded <- get_geomorphology(spatial_grid = bermuda_grid)
}
