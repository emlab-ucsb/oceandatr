% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_dist.R
\name{get_dist}
\alias{get_dist}
\title{Get distance to port or shore for a spatial grid}
\usage{
get_dist(spatial_grid, inverse = FALSE, ports = TRUE, ports_data = "wpi")
}
\arguments{
\item{spatial_grid}{\code{sf} or \code{terra::rast()} grid, e.g. created using \code{get_grid()}.}

\item{inverse}{\code{logical} set to \code{TRUE} to get the inverse of distance to shore, i.e. highest values become lowest and vice versa. This is useful for use in spatial prioritization as a proxy for fishing activity, where the further a grid cell is from the shore, the less fishing activity there might be. Default is \code{FALSE} and returns distance from shore.}
}
\value{
a \code{terra::rast} or \code{sf} object (same type as \code{spatial_grid} input) with distance to shore for each grid cell.
}
\description{
Calculates distance from port or shore for each grid cell in the provided spatial grid. Spatial grid can be \code{terra::rast()} or \code{sf} format.
Port locations are downloaded directly from the World Port Index (Pub 150): https://msi.nga.mil/Publications/WPI. Alternatively, anchorages can be used instead. The anchorages data is from Global Fishing Watch and identifies anchorages as anywhere vessels with AIS remain stationary for 12 hours or more (see https://globalfishingwatch.org/datasets-and-code-anchorages/).
The Natural Earth high resolution land polygons are used as the shoreline and are downloaded from the Natural Earth website (https://www.naturalearthdata.com/downloads/10m-physical-vectors/), so an internet connection is required.
}
\examples{
# Get EEZ data first 
bermuda_eez <- get_boundary(name = "Bermuda")
# Get a raster spatial grid for Bermuda
bermuda_grid <- get_grid(boundary = bermuda_eez, crs = '+proj=laea +lon_0=-64.8108333 +lat_0=32.3571917 +datum=WGS84 +units=m +no_defs', resolution = 20000)
dist_from_shore_rast <- get_dist_shore(bermuda_grid)
terra::plot(dist_from_shore_rast)
}
